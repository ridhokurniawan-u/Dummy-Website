- name: Deploy Pipeline CAP with Fail-Safe
  hosts: myhosts
  vars:
    deploy_dir: /home/ubuntu/testing-maingo

  tasks:
    - name: Create backups directory
      ansible.builtin.file:
        path: "{{ deploy_dir }}/backups"
        state: directory
        mode: "0755"

    - name: Back up the old binary and logs
      ansible.builtin.shell: |
        cd {{ deploy_dir }}
        timestamp=$(date +%Y-%m-%d-%H:%M:%S)
        if [ -f testing-maingo ]; then
          mv testing-maingo backups/testing-maingo_backup_${timestamp}
        fi
        if [ -f testing-maingo.out ]; then
          mv testing-maingo.out backups/testing-maingo_backup_${timestamp}.log
        fi

    - name: Deploy and Start New Service
      block:
        - name: Copy the new binary to the production server
          ansible.builtin.copy:
            src: "/tmp/Dummy-Website/testing-maingo"
            dest: "{{ deploy_dir }}"
            mode: "0755"

        - name: Check if the old service is running
          ansible.builtin.command: "pidof testing-maingo"
          register: pidof_result
          ignore_errors: yes

        - name: Kill old process if running
          ansible.builtin.shell: "sudo kill -9 {{ pidof_result.stdout }}"
          when: pidof_result.stdout != ""

        - name: Start the new service with nohup
          ansible.builtin.shell: |
            cd {{ deploy_dir }}
            nohup ./testing-maingo -p prod > testing-maingo.out 2>&1 &
          notify: restart backend service
          register: deploy_logs

        - name: Verify the new service is running
          ansible.builtin.command: "pidof testing-maingo"
          register: new_service_pid
          failed_when: new_service_pid.stdout == ""

        - name: Debug new service PID
          ansible.builtin.debug:
            var: new_service_pid.stdout

      rescue:
        - name: Debug running process during rescue
          ansible.builtin.command: "pidof testing-maingo"
          register: rescue_pid_debug
          ignore_errors: yes
          changed_when: false

        - name: Debug PID in rescue mode
          ansible.builtin.debug:
            var: rescue_pid_debug.stdout_lines

        - name: Get latest binary file
          ansible.builtin.shell: |
            ls -t {{ deploy_dir }}/backups/testing-maingo_backup_* 2>/dev/null | head -n 1 || echo "No backup file found."
          register: latest_compiled
          changed_when: false
          become: yes

        - name: Get latest log file
          ansible.builtin.shell: |
            ls -t {{ deploy_dir }}/backups/testing-maingo_backup_*.log | head -n 1 || echo "No backup log found."
          register: latest_log
          changed_when: false
          become: yes

        - name: Move backup
          ansible.builtin.shell: |
            cp {{ latest_compiled.stdout }} {{ deploy_dir }}/testing-maingo
            cp {{ latest_log.stdout }} {{ deploy_dir }}/testing-maingo.out
          become: yes

        - name: Restart old service
          ansible.builtin.meta: flush_handlers
          become: yes

        - name: Debug restoration logs
          ansible.builtin.debug:
            msg: "Restoration logs: {{ restore_logs.stdout_lines | default('No logs available') }}"

  handlers:
    - name: restart backend service
      ansible.builtin.shell: |
        cd {{ deploy_dir }}
        nohup ./testing-maingo -p prod > testing-maingo.out 2>&1 &
